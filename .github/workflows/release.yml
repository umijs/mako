name: utoo-release

on:
  release:
    types: [published]

jobs:
  build-and-publish-binary:
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
            platform_os: linux
            platform_cpu: x64
          - os: macos-latest
            target: x86_64-apple-darwin
            platform_os: darwin
            platform_cpu: x64
          - os: macos-latest
            target: aarch64-apple-darwin
            platform_os: darwin
            platform_cpu: arm64

    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
      id-token: write

    steps:
      - uses: actions/checkout@v3

      - name: Get version from release or use alpha version
        id: get_version
        run: |
          echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Update Cargo.toml version
        run: |
          VERSION=${{ steps.get_version.outputs.VERSION }}
          sed -i.bak "s/^version = \".*\"/version = \"$VERSION\"/" crates/cli/Cargo.toml
          rm crates/cli/Cargo.toml.bak

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2025-02-12
          override: true
          target: ${{ matrix.target }}

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --bin utoo --bin utoo-install --bin utoo-rebuild --bin utoo-deps --bin utoo-clean

      - name: Package Binaries
        run: |
          cd target/release
          tar -czf ../../utoo-${{ matrix.platform_os }}-${{ matrix.platform_cpu }}.tar.gz \
            utoo utoo-install utoo-rebuild utoo-deps utoo-clean

      - name: Upload Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "${GITHUB_REF#refs/tags/}" \
            utoo-${{ matrix.platform_os }}-${{ matrix.platform_cpu }}.tar.gz --clobber

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Publish Binary Packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          VERSION: ${{ steps.get_version.outputs.VERSION }}
        run: |
          set -e
          cd vendor/scripts
          BINS=("utoo" "utoo-install" "utoo-rebuild" "utoo-deps" "utoo-clean")
          for BIN in "${BINS[@]}"; do
            PACKAGE_NAME=$(echo "$BIN")
            ./npm-binary.sh "$PACKAGE_NAME" "$VERSION" \
              "../../target/release/$BIN" \
              "${{ matrix.platform_os }}" "${{ matrix.platform_cpu }}"
          done

  publish-main:
    needs: build-and-publish-binary
    runs-on: ubuntu-20.04
    permissions:
      contents: write
      id-token: write

    steps:
      - uses: actions/checkout@v3

      - name: Get version from release or use alpha version
        id: get_version
        run: |
          echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Publish Main Packages
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          VERSION: ${{ steps.get_version.outputs.VERSION }}
        run: |
          set -e
          cd vendor/scripts
          BINS=("utoo" "utoo-install" "utoo-rebuild" "utoo-deps" "utoo-clean")
          for BIN in "${BINS[@]}"; do
            PACKAGE_NAME=$(echo "$BIN")
            ./npm-main.sh "$PACKAGE_NAME" "$VERSION"
          done
