name: Rust-CI

on:
  push:
    branches: [master]
  pull_request:
    types: [opened, synchronize]

# Cancel prev CI if new commit
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    name: Run tests and build_fixture on ubuntu
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [nightly-2022-09-23]
        node_version: [lts/*]
    steps:
      - uses: actions/checkout@v2
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}
          cache: "pnpm"
          token: ${{ secrets.GH_DOTCOM_TOKEN }}
      - run: pnpm i --no-lockfile
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Cache Cargo Dependencies
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: test
        if: ${{ matrix.rust == 'stable' || matrix.rust == 'beta' || matrix.rust == 'nightly-2022-09-23' }}
        run: >
          cargo test -v

      - name: build
        run: cargo build

      - name: prepare-antd-CI
        working-directory: ./examples/with-antd
        run: pnpm cypress install

#      - name: antd-CI-advanced
#        run: pnpm --filter with-antd run e2e:ci

      - name: Set Mako TreeShake to basic strategy
        uses: sergeysova/jq-action@v2
        with:
          cmd: jq '.treeShake="basic"' ./examples/with-antd/mako.config.json > tmp.json
      - name: Update Mako config file
        run: |
          mv tmp.json  ./examples/with-antd/mako.config.json
          cat ./examples/with-antd/mako.config.json

      - name: antd-CI-basic
        run: pnpm --filter with-antd run e2e:ci

      - name: prepare-HMR-CI
        working-directory: ./examples/with-dynamic-import
        run: pnpm cypress install
      - name: HMR-CI
        run: pnpm --filter with-dynamic-import run e2e:ci

  # build_benchmarks:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: nightly
  #         override: true
  #     - name: build
  #       run: cargo build -v --benches

  lint_with_clippy:
    runs-on: ubuntu-20.04
    steps:
      - name: install-dependencies
        run: sudo apt update && sudo apt install ninja-build meson nasm
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-09-23
          override: true
          components: clippy
      - uses: actions-rs/cargo@v1
        with:
          command: lint

  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2022-09-23
          override: true
          components: rustfmt
      - name: Run rustfmt check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check
