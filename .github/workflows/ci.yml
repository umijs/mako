name: utoo-ci

on: [pull_request]

env:
  CARGO_INCREMENTAL: 1

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      changed-crates: ${{ steps.detect.outputs.changed-crates }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Detect changes
      id: detect
      shell: bash
      run: |
        CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }})
        echo "Changed files:"
        echo "$CHANGED_FILES"

        CHANGED_CRATES=""
        while IFS= read -r file; do
          echo "Processing file: $file"
          if [[ $file =~ ^crates/([^/]+)/ ]]; then
            CRATE_DIR="${BASH_REMATCH[1]}"
            echo "Found crate directory: $CRATE_DIR"
            if [ -f "crates/$CRATE_DIR/Cargo.toml" ]; then
              echo "Found Cargo.toml for $CRATE_DIR"
              PACKAGE_NAME=$(grep -m 1 '^name = ' "crates/$CRATE_DIR/Cargo.toml" | sed 's/name = "\(.*\)"/\1/')
              echo "Package name: $PACKAGE_NAME"
              if [ -n "$PACKAGE_NAME" ]; then
                CHANGED_CRATES="$CHANGED_CRATES $PACKAGE_NAME"
                echo "Added to changed crates: $PACKAGE_NAME"
              fi
            else
              echo "No Cargo.toml found for $CRATE_DIR"
            fi
          fi
        done <<< "$CHANGED_FILES"

        CHANGED_CRATES=$(echo $CHANGED_CRATES | tr ' ' '\n' | sort -u | tr '\n' ' ')
        echo "Final changed crates: $CHANGED_CRATES"
        echo "changed-crates=$CHANGED_CRATES" >> $GITHUB_OUTPUT

  build:
    needs: detect-changes
    if: needs.detect-changes.outputs.changed-crates != ''
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4

    - name: Cache Cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly-2025-06-05
        override: true
        components: rustfmt, clippy

    - name: Check formatting
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        toolchain: nightly-2025-06-05
        args: --all -- --check

    - name: Lint changed Rust Code
      run: |
        for crate in ${{ needs.detect-changes.outputs.changed-crates }}; do
          echo "Building crate: $crate"
          if [ "$crate" == "utoo_runtime" ]; then
            cd crates/runtime && cargo build
          else
            cargo clippy -p $crate
          fi
        done
      

    - name: Build changed crates
      run: |
        for crate in ${{ needs.detect-changes.outputs.changed-crates }}; do
          echo "Building crate: $crate"
          if [ "$crate" == "utoo_runtime" ]; then
            cd crates/runtime && cargo build
          else
            cargo build -p $crate
          fi
        done

    - name: Test changed crates
      run: |
        for crate in ${{ needs.detect-changes.outputs.changed-crates }}; do
          echo "Testing crate: $crate"
          if [ "$crate" == "utoo_runtime" ]; then
            cd crates/runtime && cargo test
          else
            cargo test -p $crate
          fi
        done
