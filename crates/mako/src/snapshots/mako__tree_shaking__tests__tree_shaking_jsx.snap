---
source: crates/mako/src/tree_shaking.rs
expression: content
---
const chunksIdToUrlMap = {};
chunksIdToUrlMap["index.tsx"] = `index.js`;
function createRuntime(makoModules, entryModuleId) {
    const modulesRegistry = {};
    function requireModule(moduleId) {
        if (moduleId === '$$IGNORED$$') return {};
        const cachedModule = modulesRegistry[moduleId];
        if (cachedModule !== undefined) {
            if (cachedModule.error) {
                throw cachedModule.error;
            }
            return cachedModule.exports;
        }
        const module = {
            id: moduleId,
            exports: {}
        };
        modulesRegistry[moduleId] = module;
        try {
            const execOptions = {
                id: moduleId,
                module,
                factory: makoModules[moduleId],
                require: requireModule
            };
            requireModule.requireInterceptors.forEach((interceptor)=>{
                interceptor(execOptions);
            });
            execOptions.factory.call(execOptions.module.exports, execOptions.module, execOptions.module.exports, execOptions.require);
        } catch (e) {
            modulesRegistry[moduleId].error = e;
            throw e;
        }
        return module.exports;
    }
    requireModule.requireInterceptors = [];
    !(function() {
        let currentParents = [];
        let currentChildModule;
        requireModule.hmrC = {};
        const createHmrRequire = (require, moduleId)=>{
            const me = modulesRegistry[moduleId];
            if (!me) return require;
            const fn = (request)=>{
                if (me.hot.active) {
                    if (modulesRegistry[request]) {
                        const parents = modulesRegistry[request].parents;
                        if (!parents.includes(moduleId)) {
                            parents.push(moduleId);
                        }
                    } else {
                        currentParents = [
                            moduleId
                        ];
                        currentChildModule = request;
                    }
                    if (!me.children.includes(request)) {
                        me.children.push(request);
                    }
                } else {}
                return require(request);
            };
            Object.assign(fn, require);
            return fn;
        };
        const applyHotUpdate = (_chunkId, update)=>{
            const { modules, removedModules } = update;
            const outdatedModules = [];
            for (const moduleId of Object.keys(modules)){
                if (!modulesRegistry[moduleId]) continue;
                if (outdatedModules.includes(moduleId)) continue;
                outdatedModules.push(moduleId);
                const queue = [
                    moduleId
                ];
                while(queue.length){
                    const item = queue.pop();
                    const module = modulesRegistry[item];
                    if (!module) continue;
                    if (module.hot._main) {
                        location.reload();
                    }
                    if (module.hot._selfAccepted) {
                        continue;
                    }
                    for (const parentModule of module.parents){
                        if (outdatedModules.includes(parentModule)) continue;
                        outdatedModules.push(parentModule);
                        queue.push(parentModule);
                    }
                }
            }
            const outdatedSelfAcceptedModules = [];
            for (const moduleId of outdatedModules){
                const module = modulesRegistry[moduleId];
                if (module.hot._selfAccepted) {
                    outdatedSelfAcceptedModules.push(module);
                }
            }
            for (const moduleId of outdatedModules){
                const module = modulesRegistry[moduleId];
                for (const handler of module.hot._disposeHandlers){
                    handler();
                }
                module.hot.active = false;
                delete modulesRegistry[moduleId];
                for (const childModule of module.children){
                    const child = modulesRegistry[childModule];
                    if (!child) continue;
                    const idx = child.parents.indexOf(moduleId);
                    if (idx !== -1) {
                        child.parents.splice(idx, 1);
                    }
                }
            }
            registerModules(modules);
            for (const module of outdatedSelfAcceptedModules){
                module.hot._requireSelf();
            }
        };
        const createModuleHotObject = (moduleId, me)=>{
            const _main = currentChildModule !== moduleId;
            const hot = {
                _acceptedDependencies: {},
                _declinedDependencies: {},
                _selfAccepted: false,
                _selfDeclined: false,
                _selfInvalidated: false,
                _disposeHandlers: [],
                _requireSelf: function() {
                    currentParents = me.parents.slice();
                    currentChildModule = _main ? undefined : moduleId;
                    requireModule(moduleId);
                },
                _main,
                active: true,
                accept () {
                    this._selfAccepted = true;
                },
                dispose (callback) {
                    this._disposeHandlers.push(callback);
                },
                invalidate () {},
                check () {
                    const current_hash = requireModule.currentHash();
                    return fetch(`${requireModule.publicPath}${current_hash}.hot-update.json`).then((res)=>{
                        return res.json();
                    }).then((update)=>{
                        return Promise.all(update.c.map((chunk)=>{
                            let parts = chunk.split('.');
                            let l = parts.length;
                            let left = parts.slice(0, parts.length - 1).join('.');
                            let ext = parts[l - 1];
                            const hotChunkName = [
                                left,
                                current_hash,
                                'hot-update',
                                ext
                            ].join('.');
                            return new Promise((done)=>{
                                const url = `${requireModule.publicPath}${hotChunkName}`;
                                requireModule.loadScript(url, done);
                            });
                        }));
                    });
                },
                apply (update) {
                    return applyHotUpdate(update);
                }
            };
            currentChildModule = undefined;
            return hot;
        };
        requireModule.hmrC.jsonp = (chunkId, update, promises)=>{
            promises.push(new Promise((resolve)=>{
                applyHotUpdate(chunkId, update);
                resolve();
            }));
        };
        requireModule.requireInterceptors.push((options)=>{
            const orginRequire = options.require;
            options.module.hot = createModuleHotObject(options.id, options.module);
            options.module.meta = {
                hot: options.module.hot
            };
            options.module.parents = currentParents;
            currentParents = [];
            options.module.children = [];
            options.require = createHmrRequire(options.require, options.id);
            options.require.currentHash = ()=>{
                return orginRequire._h;
            };
        });
        requireModule.applyHotUpdate = (chunkId, update, runtime)=>{
            runtime(requireModule);
            return Promise.all(Object.keys(requireModule.hmrC).reduce(function(promises, key) {
                requireModule.hmrC[key](chunkId, update, promises);
                return promises;
            }, []));
        };
    })();
    !(function() {
        requireModule.chunkEnsures = {};
        requireModule.ensure = function(chunkId) {
            return Promise.all(Object.keys(requireModule.chunkEnsures).reduce(function(promises, key) {
                requireModule.chunkEnsures[key](chunkId, promises);
                return promises;
            }, []));
        };
    })();
    !(function() {
        const installedChunks = (requireModule.jsonpInstalled = {});
        requireModule.chunkEnsures.jsonp = (chunkId, promises)=>{
            let data = installedChunks[chunkId];
            if (data === 0) return;
            if (data) {
                promises.push(data[2]);
            } else {
                const promise = new Promise((resolve, reject)=>{
                    data = installedChunks[chunkId] = [
                        resolve,
                        reject
                    ];
                });
                promises.push((data[2] = promise));
                const url = requireModule.publicPath + chunksIdToUrlMap[chunkId];
                const error = new Error();
                const onLoadEnd = (event)=>{
                    data = installedChunks[chunkId];
                    if (data !== 0) installedChunks[chunkId] = undefined;
                    if (data) {
                        const errorType = event?.type;
                        const src = event?.target?.src;
                        error.message = `Loading chunk ${chunkId} failed. (${errorType} : ${src})`;
                        error.name = 'ChunkLoadError';
                        error.type = errorType;
                        data[1](error);
                    }
                };
                requireModule.loadScript(url, onLoadEnd, `chunk-${chunkId}`);
                return promise;
            }
        };
    })();
    !(function() {
        const inProgress = {};
        requireModule.loadScript = (url, done, key)=>{
            if (inProgress[url]) {
                return inProgress[url].push(done);
            }
            const script = document.createElement('script');
            script.timeout = 120;
            script.src = url;
            inProgress[url] = [
                done
            ];
            const onLoadEnd = (prev, event)=>{
                clearTimeout(timeout);
                const doneFns = inProgress[url];
                delete inProgress[url];
                script.parentNode?.removeChild(script);
                if (doneFns) {
                    doneFns.forEach(function(fn) {
                        return fn(event);
                    });
                }
                if (prev) return prev(event);
            };
            const timeout = setTimeout(onLoadEnd.bind(null, undefined, {
                type: 'timeout',
                target: script
            }), 120000);
            script.onerror = onLoadEnd.bind(null, script.onerror);
            script.onload = onLoadEnd.bind(null, script.onload);
            document.head.appendChild(script);
        };
    })();
    !(function() {
        const installedChunks = (requireModule.cssInstalled = {});
        const cssChunksIdToUrlMap = {};
        function findStylesheet(url) {
            return Array.from(document.querySelectorAll('link[href][rel=stylesheet]')).find((link)=>{
                const [linkUrl] = link.getAttribute('href').split('?');
                return linkUrl === url || linkUrl === requireModule.publicPath + url;
            });
        }
        function createStylesheet(chunkId, url, oldTag, resolve, reject) {
            const link = document.createElement('link');
            link.rel = 'stylesheet';
            link.type = 'text/css';
            link.href = url;
            link.onerror = link.onload = function(event) {
                link.onerror = link.onload = null;
                if (event.type === 'load') {
                    installedChunks[chunkId] = 0;
                    resolve();
                } else {
                    delete installedChunks[chunkId];
                    const errorType = event?.type;
                    const realHref = event?.target?.href;
                    const err = new Error('Loading CSS chunk ' + chunkId + ' failed.\n(' + realHref + ')');
                    err.code = 'CSS_CHUNK_LOAD_FAILED';
                    err.type = errorType;
                    err.request = realHref;
                    link.parentNode.removeChild(link);
                    reject(err);
                }
            };
            if (oldTag) {
                oldTag.parentNode.insertBefore(link, oldTag.nextSibling);
            } else {
                document.head.appendChild(link);
            }
            return link;
        }
        requireModule.chunkEnsures.css = (chunkId, promises)=>{
            if (installedChunks[chunkId]) {
                promises.push(installedChunks[chunkId]);
            } else if (installedChunks[chunkId] !== 0 && cssChunksIdToUrlMap[chunkId]) {
                installedChunks[chunkId] = new Promise((resolve, reject)=>{
                    const url = cssChunksIdToUrlMap[chunkId];
                    const fullUrl = requireModule.publicPath + url;
                    if (findStylesheet(url)) {
                        resolve();
                    } else {
                        createStylesheet(chunkId, fullUrl, null, resolve, reject);
                    }
                });
                promises.push(installedChunks[chunkId]);
                return promises;
            }
        };
        requireModule.hmrC.css = (chunkId, _update, promises)=>{
            if (cssChunksIdToUrlMap[chunkId]) {
                promises.push(new Promise((resolve, reject)=>{
                    let url = cssChunksIdToUrlMap[chunkId];
                    const fullUrl = requireModule.publicPath + url;
                    const oldLink = findStylesheet(url);
                    if (oldLink) {
                        const newLink = createStylesheet(chunkId, `${fullUrl}?${Date.now()}`, oldLink, ()=>{
                            newLink.rel = 'stylesheet';
                            newLink.as = null;
                            oldLink.parentNode.removeChild(oldLink);
                            resolve();
                        }, reject);
                        newLink.rel = 'prereload';
                        newLink.as = 'style';
                    }
                }));
            }
        };
    })();
    const jsonpCallback = (data)=>{
        const installedChunks = requireModule.jsonpInstalled;
        const chunkIds = data[0];
        const modules = data[1];
        if (chunkIds.some((id)=>installedChunks[id] !== 0)) {
            registerModules(modules);
        }
        for (const id of chunkIds){
            if (installedChunks[id]) {
                installedChunks[id][0]();
            }
            installedChunks[id] = 0;
        }
    };
    const registerModules = (modules)=>{
        for(const id in modules){
            makoModules[id] = modules[id];
        }
    };
    requireModule._h = '10106337942787878182';
    requireModule.currentHash = ()=>{
        return requireModule._h;
    };
    !function() {
        requireModule.publicPath = "/";
    }();
    !function() {
        registerModules({
            "@swc/helpers/_/_interop_require_default": function(module, exports, require) {
                "use strict";
                Object.defineProperty(exports, "__esModule", {
                    value: true
                });
                function _export(target, all) {
                    for(var name in all)Object.defineProperty(target, name, {
                        enumerable: true,
                        get: all[name]
                    });
                }
                _export(exports, {
                    _interop_require_default: function() {
                        return _interop_require_default;
                    },
                    _: function() {
                        return _interop_require_default;
                    }
                });
                function _interop_require_default(obj) {
                    return obj && obj.__esModule ? obj : {
                        default: obj
                    };
                }
            },
            "@swc/helpers/_/_interop_require_wildcard": function(module, exports, require) {
                "use strict";
                Object.defineProperty(exports, "__esModule", {
                    value: true
                });
                function _export(target, all) {
                    for(var name in all)Object.defineProperty(target, name, {
                        enumerable: true,
                        get: all[name]
                    });
                }
                _export(exports, {
                    _interop_require_wildcard: function() {
                        return _interop_require_wildcard;
                    },
                    _: function() {
                        return _interop_require_wildcard;
                    }
                });
                function _getRequireWildcardCache(nodeInterop) {
                    if (typeof WeakMap !== "function") return null;
                    var cacheBabelInterop = new WeakMap();
                    var cacheNodeInterop = new WeakMap();
                    return (_getRequireWildcardCache = function(nodeInterop) {
                        return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
                    })(nodeInterop);
                }
                function _interop_require_wildcard(obj, nodeInterop) {
                    if (!nodeInterop && obj && obj.__esModule) return obj;
                    if (obj === null || typeof obj !== "object" && typeof obj !== "function") return {
                        default: obj
                    };
                    var cache = _getRequireWildcardCache(nodeInterop);
                    if (cache && cache.has(obj)) return cache.get(obj);
                    var newObj = {};
                    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for(var key in obj){
                        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
                            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
                            if (desc && (desc.get || desc.set)) Object.defineProperty(newObj, key, desc);
                            else newObj[key] = obj[key];
                        }
                    }
                    newObj.default = obj;
                    if (cache) cache.set(obj, newObj);
                    return newObj;
                }
            },
            "@swc/helpers/_/_export_star": function(module, exports, require) {
                "use strict";
                Object.defineProperty(exports, "__esModule", {
                    value: true
                });
                function _export(target, all) {
                    for(var name in all)Object.defineProperty(target, name, {
                        enumerable: true,
                        get: all[name]
                    });
                }
                _export(exports, {
                    _export_star: function() {
                        return _export_star;
                    },
                    _: function() {
                        return _export_star;
                    }
                });
                function _export_star(from, to) {
                    Object.keys(from).forEach(function(k) {
                        if (k !== "default" && !Object.prototype.hasOwnProperty.call(to, k)) {
                            Object.defineProperty(to, k, {
                                enumerable: true,
                                get: function() {
                                    return from[k];
                                }
                            });
                        }
                    });
                    return from;
                }
            }
        });
    }();
    requireModule(entryModuleId);
    return {
        requireModule,
        _modulesRegistry: modulesRegistry,
        _jsonpCallback: jsonpCallback,
        _makoModuleHotUpdate: requireModule.applyHotUpdate
    };
}
const runtime = createRuntime({
    "../../../../../node_modules/.pnpm/react@18.2.0/node_modules/react/cjs/react-jsx-runtime.production.min.js": function(module, exports, require) {
        'use strict';
        var f = require("../../../../../node_modules/.pnpm/react@18.2.0/node_modules/react/index.js"), k = Symbol.for("react.element"), l = Symbol.for("react.fragment"), m = Object.prototype.hasOwnProperty, n = f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, p = {
            key: !0,
            ref: !0,
            __self: !0,
            __source: !0
        };
        function q(c, a, g) {
            var b, d = {}, e = null, h = null;
            void 0 !== g && (e = "" + g);
            void 0 !== a.key && (e = "" + a.key);
            void 0 !== a.ref && (h = a.ref);
            for(b in a)m.call(a, b) && !p.hasOwnProperty(b) && (d[b] = a[b]);
            if (c && c.defaultProps) for(b in a = c.defaultProps, a)void 0 === d[b] && (d[b] = a[b]);
            return {
                $$typeof: k,
                type: c,
                key: e,
                ref: h,
                props: d,
                _owner: n.current
            };
        }
        exports.Fragment = l;
        exports.jsx = q;
        exports.jsxs = q;
    },
    "../../../../../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js": function(module, exports, require) {
        'use strict';
        {
            module.exports = require("../../../../../node_modules/.pnpm/react@18.2.0/node_modules/react/cjs/react-jsx-runtime.production.min.js");
        }
    },
    "../../../../../node_modules/.pnpm/react@18.2.0/node_modules/react/cjs/react.production.min.js": function(module, exports, require) {
        'use strict';
        var l = Symbol.for("react.element"), n = Symbol.for("react.portal"), p = Symbol.for("react.fragment"), q = Symbol.for("react.strict_mode"), r = Symbol.for("react.profiler"), t = Symbol.for("react.provider"), u = Symbol.for("react.context"), v = Symbol.for("react.forward_ref"), w = Symbol.for("react.suspense"), x = Symbol.for("react.memo"), y = Symbol.for("react.lazy"), z = Symbol.iterator;
        function A(a) {
            if (null === a || "object" !== typeof a) return null;
            a = z && a[z] || a["@@iterator"];
            return "function" === typeof a ? a : null;
        }
        var B = {
            isMounted: function() {
                return !1;
            },
            enqueueForceUpdate: function() {},
            enqueueReplaceState: function() {},
            enqueueSetState: function() {}
        }, C = Object.assign, D = {};
        function E(a, b, e) {
            this.props = a;
            this.context = b;
            this.refs = D;
            this.updater = e || B;
        }
        E.prototype.isReactComponent = {};
        E.prototype.setState = function(a, b) {
            if ("object" !== typeof a && "function" !== typeof a && null != a) throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
            this.updater.enqueueSetState(this, a, b, "setState");
        };
        E.prototype.forceUpdate = function(a) {
            this.updater.enqueueForceUpdate(this, a, "forceUpdate");
        };
        function F() {}
        F.prototype = E.prototype;
        function G(a, b, e) {
            this.props = a;
            this.context = b;
            this.refs = D;
            this.updater = e || B;
        }
        var H = G.prototype = new F;
        H.constructor = G;
        C(H, E.prototype);
        H.isPureReactComponent = !0;
        var I = Array.isArray, J = Object.prototype.hasOwnProperty, K = {
            current: null
        }, L = {
            key: !0,
            ref: !0,
            __self: !0,
            __source: !0
        };
        function M(a, b, e) {
            var d, c = {}, k = null, h = null;
            if (null != b) for(d in void 0 !== b.ref && (h = b.ref), void 0 !== b.key && (k = "" + b.key), b)J.call(b, d) && !L.hasOwnProperty(d) && (c[d] = b[d]);
            var g = arguments.length - 2;
            if (1 === g) c.children = e;
            else if (1 < g) {
                for(var f = Array(g), m = 0; m < g; m++)f[m] = arguments[m + 2];
                c.children = f;
            }
            if (a && a.defaultProps) for(d in g = a.defaultProps, g)void 0 === c[d] && (c[d] = g[d]);
            return {
                $$typeof: l,
                type: a,
                key: k,
                ref: h,
                props: c,
                _owner: K.current
            };
        }
        function N(a, b) {
            return {
                $$typeof: l,
                type: a.type,
                key: b,
                ref: a.ref,
                props: a.props,
                _owner: a._owner
            };
        }
        function O(a) {
            return "object" === typeof a && null !== a && a.$$typeof === l;
        }
        function escape(a) {
            var b = {
                "=": "=0",
                ":": "=2"
            };
            return "$" + a.replace(/[=:]/g, function(a) {
                return b[a];
            });
        }
        var P = /\/+/g;
        function Q(a, b) {
            return "object" === typeof a && null !== a && null != a.key ? escape("" + a.key) : b.toString(36);
        }
        function R(a, b, e, d, c) {
            var k = typeof a;
            if ("undefined" === k || "boolean" === k) a = null;
            var h = !1;
            if (null === a) h = !0;
            else switch(k){
                case "string":
                case "number":
                    h = !0;
                    break;
                case "object":
                    switch(a.$$typeof){
                        case l:
                        case n:
                            h = !0;
                    }
            }
            if (h) return h = a, c = c(h), a = "" === d ? "." + Q(h, 0) : d, I(c) ? (e = "", null != a && (e = a.replace(P, "$&/") + "/"), R(c, b, e, "", function(a) {
                return a;
            })) : null != c && (O(c) && (c = N(c, e + (!c.key || h && h.key === c.key ? "" : ("" + c.key).replace(P, "$&/") + "/") + a)), b.push(c)), 1;
            h = 0;
            d = "" === d ? "." : d + ":";
            if (I(a)) for(var g = 0; g < a.length; g++){
                k = a[g];
                var f = d + Q(k, g);
                h += R(k, b, e, f, c);
            }
            else if (f = A(a), "function" === typeof f) for(a = f.call(a), g = 0; !(k = a.next()).done;)k = k.value, f = d + Q(k, g++), h += R(k, b, e, f, c);
            else if ("object" === k) throw b = String(a), Error("Objects are not valid as a React child (found: " + ("[object Object]" === b ? "object with keys {" + Object.keys(a).join(", ") + "}" : b) + "). If you meant to render a collection of children, use an array instead.");
            return h;
        }
        function S(a, b, e) {
            if (null == a) return a;
            var d = [], c = 0;
            R(a, d, "", "", function(a) {
                return b.call(e, a, c++);
            });
            return d;
        }
        function T(a) {
            if (-1 === a._status) {
                var b = a._result;
                b = b();
                b.then(function(b) {
                    if (0 === a._status || -1 === a._status) a._status = 1, a._result = b;
                }, function(b) {
                    if (0 === a._status || -1 === a._status) a._status = 2, a._result = b;
                });
                -1 === a._status && (a._status = 0, a._result = b);
            }
            if (1 === a._status) return a._result.default;
            throw a._result;
        }
        var U = {
            current: null
        }, V = {
            transition: null
        }, W = {
            ReactCurrentDispatcher: U,
            ReactCurrentBatchConfig: V,
            ReactCurrentOwner: K
        };
        exports.Children = {
            map: S,
            forEach: function(a, b, e) {
                S(a, function() {
                    b.apply(this, arguments);
                }, e);
            },
            count: function(a) {
                var b = 0;
                S(a, function() {
                    b++;
                });
                return b;
            },
            toArray: function(a) {
                return S(a, function(a) {
                    return a;
                }) || [];
            },
            only: function(a) {
                if (!O(a)) throw Error("React.Children.only expected to receive a single React element child.");
                return a;
            }
        };
        exports.Component = E;
        exports.Fragment = p;
        exports.Profiler = r;
        exports.PureComponent = G;
        exports.StrictMode = q;
        exports.Suspense = w;
        exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = W;
        exports.cloneElement = function(a, b, e) {
            if (null === a || void 0 === a) throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + a + ".");
            var d = C({}, a.props), c = a.key, k = a.ref, h = a._owner;
            if (null != b) {
                void 0 !== b.ref && (k = b.ref, h = K.current);
                void 0 !== b.key && (c = "" + b.key);
                if (a.type && a.type.defaultProps) var g = a.type.defaultProps;
                for(f in b)J.call(b, f) && !L.hasOwnProperty(f) && (d[f] = void 0 === b[f] && void 0 !== g ? g[f] : b[f]);
            }
            var f = arguments.length - 2;
            if (1 === f) d.children = e;
            else if (1 < f) {
                g = Array(f);
                for(var m = 0; m < f; m++)g[m] = arguments[m + 2];
                d.children = g;
            }
            return {
                $$typeof: l,
                type: a.type,
                key: c,
                ref: k,
                props: d,
                _owner: h
            };
        };
        exports.createContext = function(a) {
            a = {
                $$typeof: u,
                _currentValue: a,
                _currentValue2: a,
                _threadCount: 0,
                Provider: null,
                Consumer: null,
                _defaultValue: null,
                _globalName: null
            };
            a.Provider = {
                $$typeof: t,
                _context: a
            };
            return a.Consumer = a;
        };
        exports.createElement = M;
        exports.createFactory = function(a) {
            var b = M.bind(null, a);
            b.type = a;
            return b;
        };
        exports.createRef = function() {
            return {
                current: null
            };
        };
        exports.forwardRef = function(a) {
            return {
                $$typeof: v,
                render: a
            };
        };
        exports.isValidElement = O;
        exports.lazy = function(a) {
            return {
                $$typeof: y,
                _payload: {
                    _status: -1,
                    _result: a
                },
                _init: T
            };
        };
        exports.memo = function(a, b) {
            return {
                $$typeof: x,
                type: a,
                compare: void 0 === b ? null : b
            };
        };
        exports.startTransition = function(a) {
            var b = V.transition;
            V.transition = {};
            try {
                a();
            } finally{
                V.transition = b;
            }
        };
        exports.unstable_act = function() {
            throw Error("act(...) is not supported in production builds of React.");
        };
        exports.useCallback = function(a, b) {
            return U.current.useCallback(a, b);
        };
        exports.useContext = function(a) {
            return U.current.useContext(a);
        };
        exports.useDebugValue = function() {};
        exports.useDeferredValue = function(a) {
            return U.current.useDeferredValue(a);
        };
        exports.useEffect = function(a, b) {
            return U.current.useEffect(a, b);
        };
        exports.useId = function() {
            return U.current.useId();
        };
        exports.useImperativeHandle = function(a, b, e) {
            return U.current.useImperativeHandle(a, b, e);
        };
        exports.useInsertionEffect = function(a, b) {
            return U.current.useInsertionEffect(a, b);
        };
        exports.useLayoutEffect = function(a, b) {
            return U.current.useLayoutEffect(a, b);
        };
        exports.useMemo = function(a, b) {
            return U.current.useMemo(a, b);
        };
        exports.useReducer = function(a, b, e) {
            return U.current.useReducer(a, b, e);
        };
        exports.useRef = function(a) {
            return U.current.useRef(a);
        };
        exports.useState = function(a) {
            return U.current.useState(a);
        };
        exports.useSyncExternalStore = function(a, b, e) {
            return U.current.useSyncExternalStore(a, b, e);
        };
        exports.useTransition = function() {
            return U.current.useTransition();
        };
        exports.version = "18.2.0";
    },
    "../../../../../node_modules/.pnpm/react@18.2.0/node_modules/react/index.js": function(module, exports, require) {
        'use strict';
        {
            module.exports = require("../../../../../node_modules/.pnpm/react@18.2.0/node_modules/react/cjs/react.production.min.js");
        }
    },
    "index.tsx": function(module, exports, require) {
        "use strict";
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var _interop_require_default = require("@swc/helpers/_/_interop_require_default");
        var _jsxruntime = require("../../../../../node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");
        var _react = _interop_require_default._(require("../../../../../node_modules/.pnpm/react@18.2.0/node_modules/react/index.js"));
        function Foo() {
            return (0, _jsxruntime.jsx)("div", {
                children: "123"
            });
        }
        Foo;
    }
}, 'index.tsx');
globalThis.jsonpCallback = runtime._jsonpCallback;
globalThis.modulesRegistry = runtime._modulesRegistry;
globalThis.makoModuleHotUpdate = runtime._makoModuleHotUpdate;

//# sourceMappingURL=index.js.map
