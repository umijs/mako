---
source: crates/mako/src/transformers/transform_react.rs
expression: "transform(TransformTask {\n        code: r#\"const SvgComponent = (props) => (\n    <svg\n        xmlns:dc=\"http://purl.org/dc/elements/1.1/\"\n        xmlns:cc=\"http://creativecommons.org/ns#\"\n        xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n        xmlns:svg=\"http://www.w3.org/2000/svg\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        xmlns:sodipodi=\"http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd\"\n        xmlns:inkscape=\"http://www.inkscape.org/namespaces/inkscape\"\n        width={240}\n        height={144}\n        id=\"svg4136\"\n        inkscape:version=\"0.91 r13725\"\n        sodipodi:docname=\"jsoneditor-icons.svg\"\n        {...props}\n    >\n        <metadata id=\"metadata4148\">\n            <rdf:RDF></rdf:RDF>\n        </metadata>\n    </svg>\n)\"#.to_string(),\n        is_entry: false,\n        path: \"index.jsx\".to_string(),\n    })"
---
import * as RefreshRuntime from 'react-refresh';
var prevRefreshReg;
var prevRefreshSig;
prevRefreshReg = self.$RefreshReg$;
prevRefreshSig = self.$RefreshSig$;
self.$RefreshReg$ = (type, id)=>{
    RefreshRuntime.register(type, module.id + id);
};
self.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;
import { jsxDEV as _jsxDEV } from "react/jsx-dev-runtime";
const SvgComponent = (props)=>_jsxDEV("svg", {
        "xmlns:dc": "http://purl.org/dc/elements/1.1/",
        "xmlns:cc": "http://creativecommons.org/ns#",
        "xmlns:rdf": "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
        "xmlns:svg": "http://www.w3.org/2000/svg",
        xmlns: "http://www.w3.org/2000/svg",
        "xmlns:sodipodi": "http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd",
        "xmlns:inkscape": "http://www.inkscape.org/namespaces/inkscape",
        width: 240,
        height: 144,
        id: "svg4136",
        "inkscape:version": "0.91 r13725",
        "sodipodi:docname": "jsoneditor-icons.svg",
        ...props,
        children: _jsxDEV("metadata", {
            id: "metadata4148",
            children: _jsxDEV("rdf:RDF", {}, void 0, false, {
                fileName: "<<jsx-config-pragmaFrag.js>>",
                lineNumber: 1,
                columnNumber: 648
            }, this)
        }, void 0, false, {
            fileName: "<<jsx-config-pragmaFrag.js>>",
            lineNumber: 1,
            columnNumber: 607
        }, this)
    }, void 0, false, {
        fileName: "<<jsx-config-pragmaFrag.js>>",
        lineNumber: 1,
        columnNumber: 19
    }, this);
_c = SvgComponent;
var _c;
$RefreshReg$(_c, "SvgComponent");
self.$RefreshReg$ = prevRefreshReg;
self.$RefreshSig$ = prevRefreshSig;
function $RefreshIsReactComponentLike$(moduleExports) {
    if (RefreshRuntime.isLikelyComponentType(moduleExports.default || moduleExports)) {
        return true;
    }
    for(var key in moduleExports){
        if (RefreshRuntime.isLikelyComponentType(moduleExports[key])) {
            return true;
        }
    }
    return false;
}
if ($RefreshIsReactComponentLike$(module.exports)) {
    module.meta.hot.accept();
    RefreshRuntime.performReactRefresh();
}
