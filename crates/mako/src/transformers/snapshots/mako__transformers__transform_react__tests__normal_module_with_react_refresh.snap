---
source: crates/mako/src/transformers/transform_react.rs
assertion_line: 231
expression: "transform(TransformTask {\n        code: \"export default function R(){return <h1></h1>}\".to_string(),\n        is_entry: false,\n        path: \"index.jsx\".to_string(),\n    })"
---
import * as RefreshRuntime from 'react-refresh';
var prevRefreshReg;
var prevRefreshSig;
prevRefreshReg = self.$RefreshReg$;
prevRefreshSig = self.$RefreshSig$;
self.$RefreshReg$ = (type, id)=>{
    RefreshRuntime.register(type, module.id + id);
};
self.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;
import { jsxDEV as _jsxDEV } from "react/jsx-dev-runtime";
export default function R() {
    return _jsxDEV("h1", {}, void 0, false, {
        fileName: "<<jsx-config-pragmaFrag.js>>",
        lineNumber: 1,
        columnNumber: 16
    }, this);
}
_c = R;
var _c;
$RefreshReg$(_c, "R");
self.$RefreshReg$ = prevRefreshReg;
self.$RefreshSig$ = prevRefreshSig;
function $RefreshIsReactComponentLike$(moduleExports) {
    if (RefreshRuntime.isLikelyComponentType(moduleExports.default || moduleExports)) {
        return true;
    }
    for(var key in moduleExports){
        if (RefreshRuntime.isLikelyComponentType(moduleExports[key])) {
            return true;
        }
    }
    return false;
}
if ($RefreshIsReactComponentLike$(module.exports)) {
    module.meta.hot.accept();
    RefreshRuntime.performReactRefresh();
}
