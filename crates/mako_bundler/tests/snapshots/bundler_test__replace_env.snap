---
source: crates/mako_bundler/tests/bundler_test.rs
expression: output
---
[
    "\nconst modules = new Map();\nconst define = (name, moduleFactory) => {\n  modules.set(name, moduleFactory);\n};\n\nconst moduleCache = new Map();\nconst requireModule = (name) => {\n  if (moduleCache.has(name)) {\n    return moduleCache.get(name).exports;\n  }\n\n  if (!modules.has(name)) {\n    throw new Error(`Module '${name}' does not exist.`);\n  }\n\n  const moduleFactory = modules.get(name);\n  const module = {\n    exports: {},\n  };\n  moduleCache.set(name, module);\n  moduleFactory(module, module.exports, requireModule);\n  return module.exports;\n};\n        ",
    "define(\"/tmp/entry.js\", function(module, exports, require) {\n\"use strict\";\nvar _one = require(\"/tmp/one.js\");\nif (\"production\" === 'production') {\n    console.log(123);\n}\n});",
    "define(\"/tmp/one.js\", function(module, exports, require) {\n\"use strict\";\nfunction foo() {\n    if (\"production\" === 'production') {\n        console.log(123);\n    }\n    if (\"production\" === 'production') {\n        console.log(123);\n    }\n    const test = \"production\";\n}\n});",
    "\nrequireModule(\"/tmp/entry.js\");",
]
